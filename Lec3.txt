# Lecture 3 notes 

Plan 9 follows 9P protocol. It is like a client server protocol. T messages are requests, R messages are responses. 

attach - for instance when calling bind '#G', attach is used 
walk - walking down the navigation tree
clunk - analogous to close
stat, wstat - for looking at the meta data like owner, protection modes etc

/lib/keyboard --> unicode refereces.. to enter symbols.. to activate entering one of those symbols.. hit alt_key and then enter 2 characters from the file.. for instance to enter the symbol pi, hit alt, then *pi

All methods are functions, but not all funcitons are methods

Dev structure slide - those are function pointers. eg. Chat* (*attach)(char*)
Chan -- Channel structure 
Chan -- qid -- unique id - identifies the resource that is being operated on. Has 3 parts, ie, path, version, type. dev and qid work together

GPIO source - /sys/src/9/bcm/devgpio.c

nelem - used for getting number of elements 

Errors are not integers, but strings

Try catch in plan 9
	if(waserror()) {
		//catch statements
	}

	//do stuff

	poperror();	 //ends try catch




back to devgpio file or /sys/src/9/bcm/port/dat.h
- constants are stored in enums
- Dirtab - directory entries -- file name, quid, filesize, permissions

Cmdtab - list of commands- (check slide) CMfunc, "function", 3 - CMfunc is to denote the index of array, function is the command and 3 is the number of command params

gpioout function is defined at bcm/gpio.c
All internal informations like names of registers for GPIO are in - /sys/src/9/bcm/gpio.c

gpiosel -- function which handles selecting or clearing a pin. Useful for understanding how to clear and set only certain bits of the 32 bit register
Note: gp - is the set of registers


addarchfile -- add another file to existing server. -- adds file on /dev/arch -- ls '#P'

grep something *.c --searches something in all c filesize


Look at the function pitftlink to look at how addarchfile is used.. source at /bcm folder.. pitft.c

add the filename of the filename containing addarchfile function to bcm/pi2
add source file name in link section

define function with name with sourcefile name and append link ie filenamelink.. inside that function use addarchfile.. this is bound to dev server.. the created  file would turn up in /dev

check bcm/pitft.c

to find a file, du | grep filename
opening console > cat /dev/kprint
update /usr/glenda/lib/profile -- case cpu -- exec rio

kproc -- kernel level threads
